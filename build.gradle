buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.9.2'
    }
}

plugins {
    id 'groovy'
    id 'java'
}
apply plugin: 'org.asciidoctor.convert'

group 'com.telecwin'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    maven {
        url "http://maven.aliyun.com/nexus/content/groups/public/"
    }
    mavenCentral()
}

dependencies {
    implementation 'org.codehaus.groovy:groovy-all:2.3.11'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

asciidoctor {
    sourceDir = file('docs')
}

// 下面的配置会让gradle先编译groovy，后编译java，以便在 java 中使用 groovy 类
// ref: https://coderwall.com/p/wuqopq/compile-groovy-before-java-in-gradle-build
// 因为 groovy 插件默认会先编译 java 后编译 groovy，导致 java 找不到 groovy 的类。
sourceSets {
    main {
        groovy {
            // this makes the groovy-compiler compile groovy- as well
            // as java-files.
            // Needed, because java is normally compiled before groovy.
            // Since we are using groovy objects from java, we need it
            // the other way round.
            srcDirs = ['src/main/groovy', 'src/main/java']
        }
        java {
            srcDirs = [] // don't compile Java code twice
        }
    }
}
